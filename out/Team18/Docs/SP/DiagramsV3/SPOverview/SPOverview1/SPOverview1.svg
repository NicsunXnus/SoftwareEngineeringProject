<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="779px" preserveAspectRatio="none" style="width:1058px;height:779px;background:#FFFFFF;" version="1.1" viewBox="0 0 1058 779" width="1058px" zoomAndPan="magnify"><defs/><g><rect fill="none" height="26.4883" id="_title" style="stroke:none;stroke-width:1.0;" width="99" x="472.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="89" x="477.5" y="23.5352">SP Overview</text><!--MD5=[fd570c8bd7436e3e39be498405c52078]
cluster SP--><g id="cluster_SP"><rect fill="none" height="728.86" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;" width="1045" x="7" y="44.4883"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="17" x="521" y="60.0234">SP</text></g><!--MD5=[c5ce682cf540b8d15f959551ca1e3ccc]
class ConditionalDeclaration--><g id="elem_ConditionalDeclaration"><rect codeLine="37" fill="#F1F1F1" height="64.4883" id="ConditionalDeclaration" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:0.5;" width="198" x="23" y="311.1483"/><ellipse cx="38" cy="327.1483" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M41.6143,333.6483 L33.8945,333.6483 L33.8945,321.2552 L41.6143,321.2552 L41.6143,323.4134 L36.3433,323.4134 L36.3433,326.0863 L41.1162,326.0863 L41.1162,328.2445 L36.3433,328.2445 L36.3433,331.4901 L41.6143,331.4901 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="166" x="52" y="332.4393">ConditionalDeclaration</text><line style="stroke:#000000;stroke-width:0.5;" x1="24" x2="220" y1="343.1483" y2="343.1483"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="66" x="29" y="360.6834">IF, WHILE</text><line style="stroke:#000000;stroke-width:0.5;" x1="24" x2="220" y1="367.6366" y2="367.6366"/></g><g id="elem_GMN4"><path d="M23.5,448.1583 L23.5,504.0899 A0,0 0 0 0 23.5,504.0899 L302.5,504.0899 A0,0 0 0 0 302.5,504.0899 L302.5,458.1583 L292.5,448.1583 L158.42,448.1583 L131.92,376.0383 L150.42,448.1583 L23.5,448.1583 A0,0 0 0 0 23.5,448.1583 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M292.5,448.1583 L292.5,458.1583 L302.5,458.1583 L292.5,448.1583 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="162" x="29.5" y="465.7266">Shorthand for types used:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="258" x="29.5" y="481.0372">@ - Shared Pointer, str - String, b - Bool,</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="240" x="29.5" y="496.3477">strv - String View, v - vector, âˆ… - void</text></g><!--MD5=[d8c8cfd5ca149094f5b67f9f607a5ec7]
class Token--><g id="elem_Token"><rect codeLine="15" fill="#F1F1F1" height="48" id="Token" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:0.5;" width="77" x="196.5" y="568.3683"/><ellipse cx="211.5" cy="584.3683" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M213.9731,590.5113 Q213.3921,590.8102 212.7529,590.9596 Q212.1138,591.109 211.4082,591.109 Q208.9014,591.109 207.5815,589.4571 Q206.2617,587.8053 206.2617,584.6842 Q206.2617,581.5548 207.5815,579.9029 Q208.9014,578.2511 211.4082,578.2511 Q212.1138,578.2511 212.7612,578.4005 Q213.4087,578.5499 213.9731,578.8488 L213.9731,581.5714 Q213.3423,580.9904 212.7488,580.7206 Q212.1553,580.4508 211.5244,580.4508 Q210.1797,580.4508 209.4949,581.5175 Q208.8101,582.5841 208.8101,584.6842 Q208.8101,586.776 209.4949,587.8426 Q210.1797,588.9093 211.5244,588.9093 Q212.1553,588.9093 212.7488,588.6395 Q213.3423,588.3697 213.9731,587.7887 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="45" x="225.5" y="589.6593">Token</text><line style="stroke:#000000;stroke-width:0.5;" x1="197.5" x2="272.5" y1="600.3683" y2="600.3683"/><line style="stroke:#000000;stroke-width:0.5;" x1="197.5" x2="272.5" y1="608.3683" y2="608.3683"/></g><!--MD5=[3fee75583bb7a64f68d843a3c9534ab3]
class Node--><g id="elem_Node"><rect codeLine="17" fill="#F1F1F1" height="48" id="Node" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:0.5;" width="69" x="308.5" y="568.3683"/><ellipse cx="323.5" cy="584.3683" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M325.9731,590.5113 Q325.3921,590.8102 324.7529,590.9596 Q324.1138,591.109 323.4082,591.109 Q320.9014,591.109 319.5815,589.4571 Q318.2617,587.8053 318.2617,584.6842 Q318.2617,581.5548 319.5815,579.9029 Q320.9014,578.2511 323.4082,578.2511 Q324.1138,578.2511 324.7612,578.4005 Q325.4087,578.5499 325.9731,578.8488 L325.9731,581.5714 Q325.3423,580.9904 324.7488,580.7206 Q324.1553,580.4508 323.5244,580.4508 Q322.1797,580.4508 321.4949,581.5175 Q320.8101,582.5841 320.8101,584.6842 Q320.8101,586.776 321.4949,587.8426 Q322.1797,588.9093 323.5244,588.9093 Q324.1553,588.9093 324.7488,588.6395 Q325.3423,588.3697 325.9731,587.7887 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="37" x="337.5" y="589.6593">Node</text><line style="stroke:#000000;stroke-width:0.5;" x1="309.5" x2="376.5" y1="600.3683" y2="600.3683"/><line style="stroke:#000000;stroke-width:0.5;" x1="309.5" x2="376.5" y1="608.3683" y2="608.3683"/></g><!--MD5=[5815eeb1688d22ff258afc00f9e07bf7]
class TokenFactory--><g id="elem_TokenFactory"><rect codeLine="18" fill="#F1F1F1" height="80.9766" id="TokenFactory" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:0.5;" width="532" x="85" y="676.3683"/><ellipse cx="298.25" cy="692.3683" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M300.7231,698.5113 Q300.1421,698.8102 299.5029,698.9596 Q298.8638,699.109 298.1582,699.109 Q295.6514,699.109 294.3315,697.4571 Q293.0117,695.8053 293.0117,692.6842 Q293.0117,689.5548 294.3315,687.9029 Q295.6514,686.2511 298.1582,686.2511 Q298.8638,686.2511 299.5112,686.4005 Q300.1587,686.5499 300.7231,686.8488 L300.7231,689.5714 Q300.0923,688.9904 299.4988,688.7206 Q298.9053,688.4508 298.2744,688.4508 Q296.9297,688.4508 296.2449,689.5175 Q295.5601,690.5841 295.5601,692.6842 Q295.5601,694.776 296.2449,695.8426 Q296.9297,696.9093 298.2744,696.9093 Q298.9053,696.9093 299.4988,696.6395 Q300.0923,696.3697 300.7231,695.7887 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="97" x="318.75" y="697.6593">TokenFactory</text><line style="stroke:#000000;stroke-width:0.5;" x1="86" x2="616" y1="708.3683" y2="708.3683"/><line style="stroke:#000000;stroke-width:0.5;" x1="86" x2="616" y1="716.3683" y2="716.3683"/><ellipse cx="96" cy="730.1124" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" text-decoration="underline" textLength="498" x="105" y="733.9034">@Token generateToken(str tokenName, b forSimple, b forceIdentifer)</text><ellipse cx="96" cy="746.6007" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" text-decoration="underline" textLength="506" x="105" y="750.3917">@Token generateToken(strv tokenName, b forSimple, b forceIdentifer)</text></g><!--MD5=[240bf49b9a76406b01dd8e1d68aeff88]
class HelperFunctions--><g id="elem_HelperFunctions"><rect codeLine="22" fill="#F1F1F1" height="163.418" id="HelperFunctions" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:0.5;" width="517" x="164.5" y="79.4883"/><ellipse cx="360.25" cy="95.4883" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M362.7231,101.6313 Q362.1421,101.9302 361.5029,102.0796 Q360.8638,102.229 360.1582,102.229 Q357.6514,102.229 356.3315,100.5771 Q355.0117,98.9253 355.0117,95.8042 Q355.0117,92.6748 356.3315,91.0229 Q357.6514,89.3711 360.1582,89.3711 Q360.8638,89.3711 361.5112,89.5205 Q362.1587,89.6699 362.7231,89.9688 L362.7231,92.6914 Q362.0923,92.1104 361.4988,91.8406 Q360.9053,91.5708 360.2744,91.5708 Q358.9297,91.5708 358.2449,92.6375 Q357.5601,93.7041 357.5601,95.8042 Q357.5601,97.896 358.2449,98.9626 Q358.9297,100.0293 360.2744,100.0293 Q360.9053,100.0293 361.4988,99.7595 Q362.0923,99.4897 362.7231,98.9087 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="117" x="380.75" y="100.7793">HelperFunctions</text><line style="stroke:#000000;stroke-width:0.5;" x1="165.5" x2="680.5" y1="111.4883" y2="111.4883"/><line style="stroke:#000000;stroke-width:0.5;" x1="165.5" x2="680.5" y1="119.4883" y2="119.4883"/><ellipse cx="175.5" cy="133.2324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" text-decoration="underline" textLength="200" x="184.5" y="137.0234">str trimWhitespaces(str str)</text><ellipse cx="175.5" cy="149.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" text-decoration="underline" textLength="491" x="184.5" y="153.5117">v&lt;str&gt; splitString(str input, str delimiter, b includeDelimiter=false)</text><ellipse cx="175.5" cy="166.209" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" text-decoration="underline" textLength="204" x="184.5" y="170">v&lt;str&gt; splitString(str input)</text><ellipse cx="175.5" cy="182.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" text-decoration="underline" textLength="157" x="184.5" y="186.4883">b isNumber(str input)</text><ellipse cx="175.5" cy="199.1855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" text-decoration="underline" textLength="199" x="184.5" y="202.9766">b isAlphanumeric(str input)</text><ellipse cx="175.5" cy="215.6738" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" text-decoration="underline" textLength="178" x="184.5" y="219.4648">b isValidName(str input)</text><ellipse cx="175.5" cy="232.1621" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" text-decoration="underline" textLength="353" x="184.5" y="235.9531">str subString(str str, int startIndex, int endIndex)</text></g><!--MD5=[138f332371e1ce9e3ff4e1d64c0714b4]
class SimpleProcessor--><g id="elem_SimpleProcessor"><rect codeLine="32" fill="#F1F1F1" height="80.9766" id="SimpleProcessor" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:0.5;" width="333" x="256.5" y="302.9083"/><ellipse cx="359.25" cy="318.9083" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M361.7231,325.0513 Q361.1421,325.3502 360.5029,325.4996 Q359.8638,325.649 359.1582,325.649 Q356.6514,325.649 355.3315,323.9971 Q354.0117,322.3453 354.0117,319.2242 Q354.0117,316.0948 355.3315,314.4429 Q356.6514,312.7911 359.1582,312.7911 Q359.8638,312.7911 360.5112,312.9405 Q361.1587,313.0899 361.7231,313.3888 L361.7231,316.1114 Q361.0923,315.5304 360.4988,315.2606 Q359.9053,314.9908 359.2744,314.9908 Q357.9297,314.9908 357.2449,316.0575 Q356.5601,317.1241 356.5601,319.2242 Q356.5601,321.316 357.2449,322.3826 Q357.9297,323.4493 359.2744,323.4493 Q359.9053,323.4493 360.4988,323.1795 Q361.0923,322.9097 361.7231,322.3287 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="119" x="379.75" y="324.1993">SimpleProcessor</text><line style="stroke:#000000;stroke-width:0.5;" x1="257.5" x2="588.5" y1="334.9083" y2="334.9083"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="264.5" y="345.6524"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" text-decoration="underline" textLength="155" x="276.5" y="352.4434">int statementNumber</text><line style="stroke:#000000;stroke-width:0.5;" x1="257.5" x2="588.5" y1="359.3966" y2="359.3966"/><ellipse cx="267.5" cy="373.1407" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" text-decoration="underline" textLength="307" x="276.5" y="376.9317">@TokenizedProgram processProgram(strv)</text></g><!--MD5=[96ebe144aae05993730f2cfe5246d762]
class ProcessorResults--><g id="elem_ProcessorResults"><rect codeLine="41" fill="#F1F1F1" height="48" id="ProcessorResults" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:0.5;" width="156" x="449" y="452.1283"/><ellipse cx="464" cy="468.1283" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M466.4731,474.2713 Q465.8921,474.5702 465.2529,474.7196 Q464.6138,474.869 463.9082,474.869 Q461.4014,474.869 460.0815,473.2171 Q458.7617,471.5653 458.7617,468.4442 Q458.7617,465.3148 460.0815,463.6629 Q461.4014,462.0111 463.9082,462.0111 Q464.6138,462.0111 465.2612,462.1605 Q465.9087,462.3099 466.4731,462.6088 L466.4731,465.3314 Q465.8423,464.7504 465.2488,464.4806 Q464.6553,464.2108 464.0244,464.2108 Q462.6797,464.2108 461.9949,465.2775 Q461.3101,466.3441 461.3101,468.4442 Q461.3101,470.536 461.9949,471.6026 Q462.6797,472.6693 464.0244,472.6693 Q464.6553,472.6693 465.2488,472.3995 Q465.8423,472.1297 466.4731,471.5487 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="124" x="478" y="473.4193">ProcessorResults</text><line style="stroke:#000000;stroke-width:0.5;" x1="450" x2="604" y1="484.1283" y2="484.1283"/><line style="stroke:#000000;stroke-width:0.5;" x1="450" x2="604" y1="492.1283" y2="492.1283"/></g><!--MD5=[4662063a86870778f4a9865e456bfcb5]
class DesignExtractor--><g id="elem_DesignExtractor"><rect codeLine="46" fill="#F1F1F1" height="64.4883" id="DesignExtractor" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:0.5;" width="396" x="640" y="443.8883"/><ellipse cx="776.75" cy="459.8883" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M779.2231,466.0313 Q778.6421,466.3302 778.0029,466.4796 Q777.3638,466.629 776.6582,466.629 Q774.1514,466.629 772.8315,464.9771 Q771.5117,463.3253 771.5117,460.2042 Q771.5117,457.0748 772.8315,455.4229 Q774.1514,453.7711 776.6582,453.7711 Q777.3638,453.7711 778.0112,453.9205 Q778.6587,454.0699 779.2231,454.3688 L779.2231,457.0914 Q778.5923,456.5104 777.9988,456.2406 Q777.4053,455.9708 776.7744,455.9708 Q775.4297,455.9708 774.7449,457.0375 Q774.0601,458.1041 774.0601,460.2042 Q774.0601,462.296 774.7449,463.3626 Q775.4297,464.4293 776.7744,464.4293 Q777.4053,464.4293 777.9988,464.1595 Q778.5923,463.8897 779.2231,463.3087 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="114" x="797.25" y="465.1793">DesignExtractor</text><line style="stroke:#000000;stroke-width:0.5;" x1="641" x2="1035" y1="475.8883" y2="475.8883"/><line style="stroke:#000000;stroke-width:0.5;" x1="641" x2="1035" y1="483.8883" y2="483.8883"/><ellipse cx="651" cy="497.6324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="370" x="660" y="501.4234">void extractAndInsertAll(@ProcessedProgram, bool)</text></g><!--MD5=[4331f9e58af39fde86efba6d4808f6d9]
link SimpleProcessor to Token--><g id="link_SimpleProcessor_Token"><path codeLine="52" d="M398.73,384.1083 C371.2,428.9983 328.95,497.2883 320,508.3683 C303.76,528.4983 283.04,548.8183 266.12,564.3083 " fill="none" id="SimpleProcessor-to-Token" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="262.91,567.1483,272.2631,564.063,266.6129,563.7885,266.8874,558.1383,262.91,567.1483" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[9750967b4829c332bc204c2d94f5e2a4]
link SimpleProcessor to Node--><g id="link_SimpleProcessor_Node"><path codeLine="53" d="M410.06,384.3483 C393.89,434.2583 366.62,518.4483 352.35,562.5083 " fill="none" id="SimpleProcessor-to-Node" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="350.51,567.1983,357.0914,559.8713,352.0525,562.4422,349.4817,557.4033,350.51,567.1983" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[2b45e80697188693d2acd9aefd2993e0]
link ConditionalDeclaration to SimpleProcessor--><g id="link_ConditionalDeclaration_SimpleProcessor"><path codeLine="54" d="M221.35,343.3983 C230.92,343.3983 240.49,343.3983 250.05,343.3983 " fill="none" id="ConditionalDeclaration-to-SimpleProcessor" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="255.01,343.3983,246.01,339.3983,250.01,343.3983,246.01,347.3983,255.01,343.3983" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[629ba5553ea75be747b3f5fb1277aca8]
link SimpleProcessor to ProcessorResults--><g id="link_SimpleProcessor_ProcessorResults"><path codeLine="55" d="M454.77,384.3283 C472.33,406.4083 493.54,433.0683 508.42,451.7683 " fill="none" id="SimpleProcessor-ProcessorResults" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[65ba7565444a00d11b306e5c7dc9222b]
link TokenFactory to SimpleProcessor--><g id="link_TokenFactory_SimpleProcessor"><path codeLine="56" d="M371.95,676.2483 C380.47,658.4183 389.57,636.8183 395,616.3683 C416.38,535.8583 421.6,437.9083 422.78,384.2783 " fill="none" id="TokenFactory-SimpleProcessor" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[cf25fb0e52b892eb514ea3aea64fa17d]
link HelperFunctions to SimpleProcessor--><g id="link_HelperFunctions_SimpleProcessor"><path codeLine="57" d="M423,243.3383 C423,263.8883 423,285.0683 423,302.5383 " fill="none" id="HelperFunctions-SimpleProcessor" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[f689613c662c9ba8e2e5936b5226be8c]
link Token to TokenFactory--><g id="link_Token_TokenFactory"><path codeLine="58" d="M257.09,616.6983 C273,633.4983 294.85,656.5683 313.47,676.2283 " fill="none" id="Token-TokenFactory" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[90da2493b495b3538b2f925aa2fadeba]
link ProcessorResults to DesignExtractor--><g id="link_ProcessorResults_DesignExtractor"><path codeLine="59" d="M605.36,476.1283 C616.87,476.1283 628.38,476.1283 639.89,476.1283 " fill="none" id="ProcessorResults-DesignExtractor" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c4aac76a826cc54ac1fe4bcdc31ce136]
@startuml
' !include ../style.puml
skinparam ClassFontColor #000000
skinparam ClassBorderColor #000000

title SP Overview
skinparam class {
    FontStyle bold
}
package SP <<Rectangle>> {
    note bottom of ConditionalDeclaration
    Shorthand for types used:
    @ - Shared Pointer, str - String, b - Bool,
    strv - String View, v - vector, âˆ… - void
end note
Class Token {
}
Class Node {}
Class TokenFactory {
    {static} + @Token generateToken(str tokenName, b forSimple, b forceIdentifer)
    {static} + @Token generateToken(strv tokenName, b forSimple, b forceIdentifer)
}
Class HelperFunctions {
    {static} + str trimWhitespaces(str str)
    {static} + v<str> splitString(str input, str delimiter, b includeDelimiter=false)
    {static} + v<str> splitString(str input)
    {static} + b isNumber(str input)
    {static} + b isAlphanumeric(str input)
    {static} + b isValidName(str input)
    {static} + str subString(str str, int startIndex, int endIndex)
}
    'Tokenizes the source code'
    Class SimpleProcessor {
        {static} - int statementNumber
        {static} + @TokenizedProgram processProgram(strv)
    }
    
    enum ConditionalDeclaration {
        IF, WHILE
    }

    class ProcessorResults {
    
    }

    'Converts the Tokens into Query Object'
    Class DesignExtractor {
        + void extractAndInsertAll(@ProcessedProgram, bool)
    }
}


Token <-up.- SimpleProcessor
Node <-up.- SimpleProcessor
ConditionalDeclaration -right->SimpleProcessor
ProcessorResults -up- SimpleProcessor
SimpleProcessor -up- TokenFactory
SimpleProcessor -up- HelperFunctions
TokenFactory -up- Token
ProcessorResults -right- DesignExtractor

@end

@startuml
skinparam ClassFontColor #000000
skinparam ClassBorderColor #000000

title SP Overview
skinparam class {
    FontStyle bold
}
package SP <<Rectangle>> {
    note bottom of ConditionalDeclaration
    Shorthand for types used:
    @ - Shared Pointer, str - String, b - Bool,
    strv - String View, v - vector, âˆ… - void
end note
Class Token {
}
Class Node {}
Class TokenFactory {
    {static} + @Token generateToken(str tokenName, b forSimple, b forceIdentifer)
    {static} + @Token generateToken(strv tokenName, b forSimple, b forceIdentifer)
}
Class HelperFunctions {
    {static} + str trimWhitespaces(str str)
    {static} + v<str> splitString(str input, str delimiter, b includeDelimiter=false)
    {static} + v<str> splitString(str input)
    {static} + b isNumber(str input)
    {static} + b isAlphanumeric(str input)
    {static} + b isValidName(str input)
    {static} + str subString(str str, int startIndex, int endIndex)
}
    Class SimpleProcessor {
        {static} - int statementNumber
        {static} + @TokenizedProgram processProgram(strv)
    }
    
    enum ConditionalDeclaration {
        IF, WHILE
    }

    class ProcessorResults {
    
    }

    Class DesignExtractor {
        + void extractAndInsertAll(@ProcessedProgram, bool)
    }
}


Token <-up.- SimpleProcessor
Node <-up.- SimpleProcessor
ConditionalDeclaration -right->SimpleProcessor
ProcessorResults -up- SimpleProcessor
SimpleProcessor -up- TokenFactory
SimpleProcessor -up- HelperFunctions
TokenFactory -up- Token
ProcessorResults -right- DesignExtractor

@end

PlantUML version 1.2022.7(Tue Aug 23 01:01:30 SGT 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>