@startuml
' !include ../style.puml
skinparam ClassFontColor #000000
skinparam ClassBorderColor #000000

title SP Overview
skinparam class {
    FontStyle bold
}
package SP <<Rectangle>> {
    note bottom of ConditionalDeclaration
    Shorthand for types used:
    @ - Shared Pointer, str - String, b - Bool,
    strv - String View, v - vector, âˆ… - void
end note
Class Token {
}
Class Node {}
Class TokenFactory {
    {static} + @Token generateToken(str tokenName, b forSimple, b forceIdentifer)
    {static} + @Token generateToken(strv tokenName, b forSimple, b forceIdentifer)
}
Class HelperFunctions {
    {static} + str trimWhitespaces(str str)
    {static} + v<str> splitString(str input, str delimiter, b includeDelimiter=false)
    {static} + v<str> splitString(str input)
    {static} + b isNumber(str input)
    {static} + b isAlphanumeric(str input)
    {static} + b isValidName(str input)
    {static} + str subString(str str, int startIndex, int endIndex)
}
    'Tokenizes the source code'
    Class SimpleProcessor {
        {static} - int statementNumber
        {static} + @TokenizedProgram processProgram(strv)
    }
    
    enum ConditionalDeclaration {
        IF, WHILE
    }

    class ProcessorResults {
    
    }

    'Converts the Tokens into Query Object'
    Class DesignExtractor {
        + void extractAndInsertAll(@ProcessedProgram, bool)
    }
}


Token <-up.- SimpleProcessor
Node <-up.- SimpleProcessor
ConditionalDeclaration -right->SimpleProcessor
ProcessorResults -up- SimpleProcessor
SimpleProcessor -up- TokenFactory
SimpleProcessor -up- HelperFunctions
TokenFactory -up- Token
ProcessorResults -right- DesignExtractor

@end
