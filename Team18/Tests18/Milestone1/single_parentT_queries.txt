1 - two integers valid, select all
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select s such that Parent*(5, 6)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
5000
2 - two integers valid, select assignments. This should extend to all the other synonyms declared
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select a such that Parent*(5, 10)
3, 4, 11, 13, 15
5000
3 - two integers invalid
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select s such that Parent*(1, 3)

5000
4 - left integer, right synonym, normal
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select cl such that Parent*(6, cl)
8, 10
5000
5 - left integer, right synonym, non-container statement
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select s such that Parent*(4, s)

5000
6 - left integer, right synonym, multi-level-nesting
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select cl such that Parent*(5, cl)
8, 10
5000
7 - left integer, right synonym, mismatch synonyms, exists
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select s such that Parent*(5, i)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
5000
8 - left integer, right synonym, mismatch synonyms, does not exist
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select s such that Parent*(5, w)

5000
9 - left integer, right wildcard, exists
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select s such that Parent*(5, _)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
5000
10 - left integer, right wildcard, non-container statement
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select s such that Parent*(1, _)

5000
11 - left synonym, right integer, normal, exists
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select s such that Parent*(s, 6)
5
5000
12 - left synonym, right integer, normal, does not exist
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select s such that Parent*(s, 1)

5000
13 - left synonym, right integer, nested, exists
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select s such that Parent*(s, 8)
5, 6
5000
14 - left synonym, right integer, nested, container, exists
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select s such that Parent*(s, 6)
5
5000
15 - left synonym, right integer, mismatch synonyms, exists
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select s such that Parent*(w, 6)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
5000
16 - left synonym, right integer, mismatch synonyms, does not exist
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select s such that Parent*(w, 3)

5000
17 - two synonyms, normal, statements (grand)parents of calls
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select s such that Parent*(s, cl)
5, 6
5000
18 - two synonyms, normal, whiles (grand)parents of ifs
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select w such that Parent*(w, i)
5
5000
19 - two synonyms, normal, prints (grand)children of whiles
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select pn such that Parent*(w, pn)
7, 9
5000
19 - two synonyms, normal, parents of assignments
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select s such that Parent*(s, a)

5000
20 - two synonyms, invalid, any children of calls
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select s such that Parent*(cl, s)
semantic error
5000
21 - two synonyms, invalid, any children of read
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select s such that Parent*(r, s)
semantic error
5000
22 - two synonyms, invalid, any children of prints
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select s such that Parent*(pn, s)
semantic error
5000
23 - two synonyms, invalid, any children of assignments
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select s such that Parent*(a, s)
semantic error
5000
24 - two synonyms, invalid, any children of variables
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select s such that Parent*(v, s)
semantic error
5000
25 - two synonyms, invalid, any children of constants
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select s such that Parent*(c, s)
semantic error
5000
25 - two synonyms, invalid, any children of procedures
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select s such that Parent*(p, s)
semantic error
5000
27 - two synonyms, invalid, variable on right
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select s such that Parent*(s, v)
semantic error
5000
28 - two synonyms, invalid, procedure on right
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select s such that Parent*(s, p)
semantic error
5000
29 - two synonyms, invalid, constant on right
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select s such that Parent*(s, c)
semantic error
5000
30 - left synonym, right wildcard
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select s such that Parent*(s, _)
5, 6
5000
31 - left synonym, right wildcard, mismatch synonym, exists
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select p such that Parent*(s, _)
first, second, third
5000
32 - left synonym, right wildcard, mismatch synonym, does not exist
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select s such that Parent*(cl, _)
semantic error
5000
33 - left wildcard, right integer, exists
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select c such that Parent*(_, 6)
1, 2
5000
34 - left wildcard, right integer, does not exist
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select i such that Parent*(_, 2)

5000
35 - left wildcard, right synonym, exists
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select pn such that Parent*(_, pn)
6
5000
36 - left wildcard, right synonym, does not exist
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select a such that Parent*(_, a)

5000
37 - left wildcard, right synonym, mismatch synonym, exists
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select v such that Parent*(_, pn)
a, b, c, d, e, f
5000
38 - left wildcard, right synonym, mismatch synonym, does not exist
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select p such that Parent*(_, a)

5000
39 - two wildcards
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select w such that Parent*(_, _)
5
5000
40 - integer out of bounds
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select w such that Parent*(_, 0)

5000
41 - integer out of bounds
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p;
Select w such that Parent*(_, 9999)

5000