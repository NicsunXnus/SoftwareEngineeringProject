1 - syn, syn, arg1: proc, arg2: proc, select first arg
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select p such that Calls*(p, p1)
First, Second
5000
2 - syn, syn, arg1: proc, arg2: proc, select second arg
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select p1 such that Calls*(p, p1)
Second, Third
5000
3 - syn, wildcard, arg1: proc, arg2: wildcard, select first arg
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select p such that Calls*(p, _)
First, Second
5000
4 - syn, ident, arg1: proc, arg2: ident, select first arg
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select p such that Calls*(p, "Third")
First, Second
5000
5 - syn, ident, arg1: proc, arg2: ident, select first arg (empty)
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select p such that Calls*(p, "First")

5000
6 - wildcard, syn, arg1: wildcard, arg2: proc, select second arg
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select p such that Calls*(_, p)
Second, Third
5000
7 - wildcard, wildcard, arg1: wildcard, arg2: wildcard, select proc
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select p such that Calls*(_, _)
First, Second, Third
5000
8 - wildcard, ident, arg1: wildcard, arg2: ident, select proc
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select p such that Calls*(_, "Second")
First, Second, Third
5000
9 - wildcard, ident, arg1: wildcard, arg2: ident, select proc (invalid call)
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select p such that Calls*(_, "HongKai")

5000
10 - ident, syn, arg1: ident, arg2: syn, select proc
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select p such that Calls*("First", p)
Second, Third
5000
11 - ident, syn, arg1: ident, arg2: syn, select proc (invalid ident)
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select p such that Calls*("Marcus", p)

5000
12 - ident, wildcard, arg1: ident, arg2: wildcard, select proc
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select p such that Calls*("First", _)
First, Second, Third
5000
13 - ident, wildcard, arg1: ident, arg2: wildcard, select proc (invalid ident)
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select p such that Calls*("HanYang", _)

5000
14 - ident, ident, arg1: ident, arg2: ident, select proc
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select p such that Calls*("First", "Second")
First, Second, Third
5000
15 - ident, ident, arg1: ident, arg2: ident, select proc (invalid call)
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select p such that Calls*("Jan", "Nic")

5000
16 - syn, syn, arg1: syn, arg2: syn, select proc (invalid syn type)
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select p such that Calls*(pn, p)
SemanticError
5000
17 - syn, syn, arg1: syn, arg2: syn, select proc (invalid syn type, but valid entref)
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select p such that Calls*(c, p)
SemanticError
5000
18 - syn, syn, arg1: syn, arg2: syn, select proc (invalid syn type, but valid entref)
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select p such that Calls*(v, p)
SemanticError
5000
19 - ident, ident, arg1: ident, arg2: ident, select proc (invalid relationship)
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select p such that Calls*("First", "Third")
First, Second, Third
5000
20 - ident, ident, arg1: ident, arg2: ident, select proc (invalid relationship)
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select p such that Calls*("Second", "First")

5000
21 - int, ident, arg1: int, arg2: ident, select proc (invalid arg)
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select p such that Calls*(96, "First")
SyntaxError
5000
22 - int, ident, arg1: int, arg2: ident, select proc (invalid arg)
stmt s; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select p such that Calls*("96", "First")
SyntaxError
5000
23 - ident, ident, arg1: ident, arg2: ident, select proc
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select p such that Calls*("First", "Third")
First, Second, Third
5000
