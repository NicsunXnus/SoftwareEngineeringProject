2 - syn, syn, arg1: proc, arg2: proc
stmt s1, s2; read r; print pn; call c; while w; if i; assign a; variable v; constant c1; procedure p, q;
Select p such that Calls ("Second", p) with c.procName = p.procName such that Parent (w, c) 
Third
5000
2 - syn, syn, arg1: proc, arg2: proc
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, q;
Select p such that Calls (p, q) with q.procName = "Third" such that Modifies (p, "i") 
Second
5000
2 - syn, syn, arg1: proc, arg2: proc
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select s1.stmt# such that Follows* (s1, s2) with s2.stmt#=10
4,5,6
5000
2 - syn, syn, arg1: proc, arg2: proc
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select s1 with s1.stmt# = c.value
1, 2, 5
5000
2 - syn, syn, arg1: proc, arg2: proc
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select v with "a"=v.varName

5000
2 - syn, syn, arg1: proc, arg2: proc
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select v.stmt# such that Uses(s1, v)

5000
2 - syn, syn, arg1: proc, arg2: proc,
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select p with p.procName = r.varName
Third
5000
2 - syn, syn, arg1: proc, arg2: proc, select first arg need hk to fix DE, invalid uses map
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select cl.procName such that Uses(cl, "Second")

5000
2 - syn, syn, arg1: proc, arg2: proc, select first arg
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select cl such that Uses(cl, "Third")

5000
2 - syn, syn, arg1: proc, arg2: proc, select first arg
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select <r.varName, r.varName>
x x, z z, Third Third
5000
2 - syn, syn, arg1: proc, arg2: proc, select first arg
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select <pn.varName, r.varName>
v z, v x, v Third
5000
2 - syn, syn, arg1: proc, arg2: proc, select first arg
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select <p, r.varName> such that Modifies(r, "x")
First x, Second x,Third x
5000
2 - syn, syn, arg1: proc, arg2: proc, select first arg
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select <p, r.varName>
First x, First z, Second x, Second z, Third x, Third z, First Third, Second Third, Third Third
5000
1 - syn, syn, arg1: proc, arg2: proc, select first arg
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select cl.procName
Second, Third
5000
2 - syn, syn, arg1: proc, arg2: proc, select first arg
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select cl.procName such that Uses(cl, "x")
Second
5000
2 - syn, syn, arg1: proc, arg2: proc, select first arg
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select cl.procName such that Uses(cl, "gibberish")

5000
2 - syn, syn, arg1: proc, arg2: proc, select first arg
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select cl.procName such that Uses(cl, "gibberish")

5000
2 - syn, syn, arg1: proc, arg2: proc, select first arg
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select c.value
0, 5, 2, 1
5000
2 - syn, syn, arg1: proc, arg2: proc, select first arg
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select v.varName
x, z, i, y, v, Third
5000
2 - syn, syn, arg1: proc, arg2: proc, select first arg
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select r.varName
x, z, Third
5000
2 - syn, syn, arg1: proc, arg2: proc, select first arg
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select pn.varName
v
5000
2 - syn, syn, arg1: proc, arg2: proc, select first arg
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select r.varName such that Modifies(r, v)
x, z, Third
5000
2 - syn, syn, arg1: proc, arg2: proc, select first arg
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select c such that Modifies(s1, v) such that Uses(s1, v) such that Modifies(s1 , v)
0,1,2,5
5000
1 - syn, syn
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select s1 such that Next(s1, s2)
1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17,18
5000
2 - int, syn - loop
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select s1 such that Next(9, s1)
6, 10
5000
3 - syn, syn - loop
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select w such that Next(9, w)
6
5000
4 - syn, syn - loop
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select s1 such that Next(900, s1)

5000
5 - syn, syn - loop
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select w such that Next(w, 7)
6
5000
6 - syn, syn - loop
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select i such that Next(_, i)
10
5000
7 - syn, syn - loop
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select i such that Next*(8, 15)
10
5000
7 - syn, syn - loop
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select i such that Next*(8, 11)
10
5000
7 - syn, syn - loop
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select i such that Next*(8, 8)
10
5000
7 - syn, syn - loop
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select s1 such that Next*(s1, r)
1, 16, 17, 18
5000
7 - syn, syn - loop
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select s1 such that Next*(s1, r)
1, 16, 17, 18
5000
7 - syn, syn - loop
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select s1 such that Next*(s1, s2) such that Modifies(s1, "x")
1, 4, 6, 7, 10, 11
5000
7 - syn, syn - loop
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select s1 such that Next*(s1, s1)
6,7,8,9
5000
7 - syn, syn - loop THIS NEEDS TO BE FIXED AT DE SIDE line 3 should not be in the PKB, inconsistent with other relations
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select s1 such that Next*(s1, _)
1,2,4,5,6,7,8,9,10,11,12,13,14,16,17,18
5000
7 - syn, syn - loop THIS NEEDS TO BE FIXED AT DE SIDE line 3 should not be in the PKB, inconsistent with other relations
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a; variable v; constant c; procedure p, p1;
Select s1 such that Next(s1, _)
1,2,4,5,6,7,8,9,10,11,12,13,14,16,17,18
5000
7 - syn, syn - loop
stmt s1, s2; read r; print pn; call cl; while w; if i; assign a, a1; variable v; constant c; procedure p, p1;
Select a such that Next*(a, a1)
4,5,7,9,11,12,13,14,16
5000