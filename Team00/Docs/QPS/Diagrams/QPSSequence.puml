@startuml
!include ../style.puml
skinparam ClassFontColor #000000


skinparam ClassBorderColor #000000
box QPS LOGIC_COLOR_T1
participant ":QueryDriver" as QueryDriver LOGIC_COLOR
participant ":PQLTokenizer" as Tokenizer LOGIC_COLOR
participant ":QueryParser" as QueryParser LOGIC_COLOR
participant "f:QueryObjectFactory" as QueryObjectFactory LOGIC_COLOR
participant "o:QueryObject" as QueryObject LOGIC_COLOR
participant ":QueryBuilder" as QueryBuilder LOGIC_COLOR
participant "t:DataAccessLayer" as DataAccessLayer LOGIC_COLOR
participant ":QueryResultsTable" as QueryResultsTable LOGIC_COLOR
participant "r:ResultsHandler" as ResultsHandler LOGIC_COLOR
end box

[-> QueryDriver : execute()
activate QueryDriver

QueryDriver -> Tokenizer : tokenize(query)
activate Tokenizer

Tokenizer --> QueryDriver : tokens
deactivate Tokenizer

QueryDriver -> QueryParser : splitDeclarationQuery(tokens)
activate QueryParser

QueryParser --> QueryDriver : declarationQuerySplit

QueryDriver -> QueryParser : validateDeclaration(tokens)

QueryParser --> QueryDriver : declarations

QueryDriver -> QueryParser : validateQuery(tokens)

loop for each design entity, such that, pattern clause
create QueryObjectFactory
QueryParser -> QueryObjectFactory : createFactory(type)
activate QueryObjectFactory

QueryObjectFactory --> QueryParser : QueryObjectFactory factory


create QueryObject
QueryObjectFactory -> QueryObject : create(type)
activate QueryObject

QueryObject --> QueryObjectFactory : QueryObject queryObject
QueryObjectFactory --> QueryParser : QueryObject queryObject
deactivate QueryObjectFactory
end

QueryParser --> QueryDriver : queryObjects

QueryDriver -> QueryParser : getSynonyms()

QueryParser --> QueryDriver : synonyms
deactivate QueryParser

QueryDriver -> DataAccessLayer : DataAccessLayer
activate DataAccessLayer

DataAccessLayer --> QueryDriver : dataAccessLayer



QueryDriver -> QueryBuilder : buildQuery()
activate QueryBuilder

loop for each design entity, such that, pattern clause
QueryBuilder -> QueryObject : callAndProcess(dataAccessLayer, synonyms)

QueryObject -> DataAccessLayer: getData(type)

DataAccessLayer --> QueryObject: PKBData

QueryObject -> QueryResultsTable: createTable(headers, PKBData)
activate QueryResultsTable
QueryResultsTable --> QueryObject: table

QueryObject --> QueryBuilder : QueryResultsTable
deactivate QueryObject
end
deactivate DataAccessLayer

QueryBuilder --> QueryDriver : AllQueryResultTables
deactivate QueryBuilder


QueryDriver -> ResultsHandler : processTables(AllQueryResultTables)
activate ResultsHandler
ResultsHandler --> QueryDriver : listOfResults
deactivate QueryResultsTable
deactivate ResultsHandler

[<--QueryDriver : results
deactivate QueryDriver

@end